---
- hosts: web
  become: yes
  gather_facts: no

  # vars:
  #   lvm_groups: []
  #   lvm_apply: false

- name: LVG | Manage LVM volume group(s)
  lvg:
    vg: "{{ item.vgname }}"
    pvs: "{{ item.disks }}"
    state: "{{ item.state | default('present') }}"
  with_items: "{{ lvm_groups }}"
  when: item.create is defined and item.create

- name: LVOL | Manage LVM logical volume(s)
  lvol:
    vg: "{{ item.0.vgname }}"
    lv: "{{ item.1.lvname }}"
    size: "{{ item.1.size }}"
    resizefs: "{{ item.1.resizefs | default('yes') }}"
    shrink: "{{ item.1.schrink | default('no') }}"
    force: "{{ item.1.force | default('no') }}"
    state: "{{ item.1.state | default('present') }}"
  register: lvm
  with_subelements:
    - "{{ lvm_groups }}"
    - lvnames
  when: >
    (item.0.create is defined and item.0.create) and
    (item.1 is defined and item.1 | length > 0 ) and
    (item.1.create is defined and item.1.create)
- name: FILESYSTEM | Creating new filesystem on new LVM logical volume(s)
  filesystem:
    fstype: "{{ item.1.filesystem }}"
    dev: "/dev/{{ item.0.vgname }}/{{ item.1.lvname }}"
  with_subelements:
    - "{{ lvm_groups }}"
    - lvnames
  when: >
    (item.0.create is defined and item.0.create) and
    (item.1 is defined and item.1 | length > 0 ) and
    (item.1.create is defined and item.1.create)
- name: MOUNT | Mounting new filesystem(s)
  mount:
    name: "{{ item.1.mount_point }}"
    src: "/dev/{{ item.0.vgname }}/{{ item.1.lvname }}"
    fstype: "{{ item.1.filesystem }}"
    state: mounted
    opts: "{{ item.1.mount_options | default('defaults') }}"
  with_subelements:
    - "{{ lvm_groups }}"
    - lvnames
  when: >
    (item.0.create is defined and item.0.create) and
    (item.1 is defined and item.1 | length > 0 ) and
    (item.1.create is defined and item.1.create) and
    (item.1.mount is defined and item.1.mount)
